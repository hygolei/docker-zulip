version: '2'
services:
  database:
    image: 'zulip/zulip-postgresql:10'
    environment:
      POSTGRES_DB: 'zulip'
      POSTGRES_USER: 'zulip'
      # Note that you need to do a manual `ALTER ROLE` query if you
      # change this on a system after booting the postgres container
      # the first time on a host.  Instructions are available in README.md.
      POSTGRES_PASSWORD: 'qwerty01!'
    volumes:
      #'/opt/docker/zulip/postgresql/data:/var/lib/postgresql/data:rw'
      - '/Users/opt/docker/zulip/postgresql/data:/var/lib/postgresql/data:rw'
  memcached:
    image: 'memcached:alpine'
    command:
      - 'sh'
      - '-euc'
      - |
        echo 'mech_list: plain' > "$$SASL_CONF_PATH"
        echo "zulip@$$HOSTNAME:$$MEMCACHED_PASSWORD" > "$$MEMCACHED_SASL_PWDB"
        echo "zulip@localhost:$$MEMCACHED_PASSWORD" >> "$$MEMCACHED_SASL_PWDB"
        exec memcached -S
    environment:
      SASL_CONF_PATH: '/home/memcache/memcached.conf'
      MEMCACHED_SASL_PWDB: '/home/memcache/memcached-sasl-db'
      MEMCACHED_PASSWORD: 'qwerty01!'
    restart: always
  rabbitmq:
    image: 'rabbitmq:3.7.7'
    restart: always
    environment:
        RABBITMQ_DEFAULT_USER: 'zulip'
        RABBITMQ_DEFAULT_PASS: 'qwerty01!'
    volumes:
      - '/Users/opt/docker/zulip/rabbitmq:/var/lib/rabbitmq:rw'
  redis:
    image: 'redis:alpine'
    command:
      - 'sh'
      - '-euc'
      - |
        echo "requirepass '$$REDIS_PASSWORD'" > /etc/redis.conf
        exec redis-server /etc/redis.conf
    environment:
      REDIS_PASSWORD: 'qwerty01!'
    volumes:
      - '/Users/opt/docker/zulip/redis:/data:rw'
  zulip:
    #image: 'zulip/docker-zulip:4.3-0'
    #image: 'dockerzulip:cofidis'
    image: 'dockerzulip:leitao'
    #build:
    #  context: .
    #  args:
    #    # Change these if you want to build zulip from a different repo/branch
    #    ZULIP_GIT_URL: https://github.com/zulip/zulip.git
    #    ZULIP_GIT_REF: '4.3'
    #    # Set this up if you plan to use your own CA certificate bundle for building
    #    # CUSTOM_CA_CERTIFICATES:
    ports:
      - '80:80'
      - '443:443'
    environment:
      CUSTOM_CA_CERTIFICATES: '/etc/ssl/certs/ca-certificates.crt'
      DB_HOST: 'database'
      DB_HOST_PORT: '5432'
      DB_USER: 'zulip'
      #SSL_CERTIFICATE_GENERATION: 'auto-generate'
      SETTING_MEMCACHED_LOCATION: 'memcached:11211'
      SETTING_RABBITMQ_HOST: 'rabbitmq'
      SETTING_REDIS_HOST: 'redis'
      SECRETS_email_password: 'nrkt jybs vrwv ilql'
      # These should match RABBITMQ_DEFAULT_PASS, POSTGRES_PASSWORD,
      # MEMCACHED_PASSWORD, and REDIS_PASSWORD above.
      SECRETS_rabbitmq_password: 'qwerty01!'
      SECRETS_postgres_password: 'qwerty01!'
      SECRETS_memcached_password: 'qwerty01!'
      SECRETS_redis_password: 'qwerty01!'
      SECRETS_secret_key: 'qwerty01!'
      SETTING_EXTERNAL_HOST: 'hygolei.asuscomm.com'
      SETTING_ZULIP_ADMINISTRATOR: 'cof.dsi.foco@gmail.com'
      SETTING_EMAIL_HOST: 'smtp.gmail.com'  # e.g. smtp.example.com
      SETTING_EMAIL_HOST_USER: 'cof.dsi.foco@gmail.com'
      SETTING_EMAIL_PORT: '587'
      # It seems that the email server needs to use ssl or tls and can't be used without it
      SETTING_EMAIL_USE_SSL: 'False'
      SETTING_EMAIL_USE_TLS: 'True'
      ZULIP_AUTH_BACKENDS: 'EmailAuthBackend'
      ZULIP_USER_EMAIL: 'cof.dsi.foco@gmail.com'
      ZULIP_USER_PASS: 'qwerty01!'
      # Uncomment this when configuring the mobile push notifications service
      # SETTING_PUSH_NOTIFICATION_BOUNCER_URL: 'https://push.zulipchat.com'
    volumes:
      - '/Users/opt/docker/zulip/zulip:/data:rw'
      - '/Users/opt/docker/zulip/zulipstaticfiles:/home/zulip/prod-static/serve/webpack-bundles:rw'
    ulimits:
      nofile:
        soft: 1000000
        hard: 1048576
#su zulip -c '/home/zulip/deployments/current/manage.py generate_realm_creation_link'
#cp -r /root/zulip/ /root/custom_zulip